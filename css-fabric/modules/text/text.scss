/*
* css-fabric 
* text size and transform system
*/

// load scss config file
@use '../../_utils';
// load general config variables
$_cfg: utils.get_conf();
// load local config variables
$_text: utils.get_conf_data(text);

// read variables
$text_class_name: map-get($_cfg, text_class_name);
$text_class_name_short: map-get($_cfg, text_class_name_short);
$font_sizes: map-get($_text, font_sizes);
$font_sizes_unit: map-get($_text, font_sizes_unit);
$font_sizes_h1_em: map-get($_text, font_sizes_h1_em);
$font_sizes_h_min_em: map-get($_text, font_sizes_h_min_em);

$text_transform: map-get($_text, text_transform);
$font_weights: map-get($_text, font_weights);

$text_align: map-get($_text, text_align);

// css border rules builder
@mixin css_border_property_builder($css_prop, $grid_key, $rule, $size_value) {
	// concatenate "-with" to property name when property is "border"
	$final_rule: if($css_prop== border, null, null);
	$suffix_rule: if($css_prop== border, solid red, null);

	@each $grid_size_value in $rule {
		#{$css_prop}-#{$grid_size_value}#{$final_rule}: $size_value $suffix_rule;
	}
}

/* css Hn text rules */
$h1_size: $font_sizes_h1_em;
$ratio: $h1_size/$font_sizes;
$ratio_max_min: $font_sizes_h1_em / $font_sizes_h_min_em;

.#{$text_class_name_short} {
	@for $grid_size_value from 1 through $font_sizes {
		// 12em => 1em;
		$size: $grid_size_value * 1;
		$index: $font_sizes - $grid_size_value + 1;
		$font_size: $index * $ratio;

		&-h#{$size} {
			font-size: $font_size+em;
		}
	}
}

.#{$text_class_name_short} {
	@each $transform_key, $transform_prop in $text_transform {
		&-#{$transform_key} {
			text-transform: $transform_prop;
		}
	}
}

.#{$text_class_name_short} {
	@each $transform_key, $transform_prop in $font_weights {
		&-#{$transform_key} {
			font-weight: $transform_prop;
		}
	}
}

.#{$text_class_name_short} {
	@each $transform_key, $transform_prop in $text_align {
		&-#{$transform_key} {
			text-align: $transform_prop;
		}
	}
}
