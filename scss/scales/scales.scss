@use '../_config';
/*
 css-fabric scales system
*/


// @todo general config final generation
$CFG_HAS_DIMENSION_STRICT: false;
$CFG_HAS_DIMENSION_MIN: false;
$CFG_HAS_DIMENSION_MAX: false;

// media queries sizes, in em // migrated
$MEDIA_QUERY_SIZES: (
  sm: 35.5,
  md: 48,
  lg: 64,
  xl: 80,
  xxl: 120,
);

// dimensions declaration
$scale_size: 1em; // migrated
$scale_props: (
  width: w,
  height: h,
); // migrated
$scale_css_values: max-content min-content fit-content; // migrated
$scale_shorthands: (
  "full": 100%,
  "mid": 50%,
  "quarter": 25%,
  "tiers": 33%,
); // migrated
$scale_defined_sizes: 1, 2, 4, 8, 16, 24, 32, 48, 64, 96, 128, 256; // in em // migrated
$scale_grid_ratios: 8 24; // for col in % // migrated


/// css dimensions rules builder
@mixin css_dimension_property_builder(
  $scale_prop,
  $size_code,
  $size_value,
  $media_query_code
) {
  //
  $scale_prop_short: map-get($scale_props, $scale_prop);
  //$property_name: if($media_query_code,#{$scale_prop_short}-#{$media_query_code}-#{$size_code},#{$scale_prop_short}-#{$size_code});
  /*  dimension : "-#{$size_code}" shorthand is #{$size_value} #{$scale_prop}*/
  $tag: if(
    $media_query_code,
    #{$scale_prop_short}-#{$media_query_code}-#{$size_code},
    #{$scale_prop_short}-#{$size_code}
  );
  .#{$tag} {
    #{$scale_prop}: $size_value;

    @if ($CFG_HAS_DIMENSION_MAX) {
      &-max {
        max-#{$scale_prop}: $size_value;
      }
    }
    @if ($CFG_HAS_DIMENSION_MIN) {
      &-min {
        min-#{$scale_prop}: $size_value;
      }
    }
    @if ($CFG_HAS_DIMENSION_STRICT) {
      &-strict {
        #{$scale_prop}: $size_value;
        max-#{$scale_prop}: $size_value;
        min-#{$scale_prop}: $size_value;
      }
    }
  }
}
/// css dimensions rules builder responsive
@mixin css_dimension_property_responsive_builder(
  $mq_size_key,
  $mq_size_value,
  $scale_prop
) {
  // shorthand naked
  @media only screen and (min-width: $mq_size_value + em) {
    @content;
  }
}

// loop on shorthands
@mixin play_shorthand_loop($scale_prop, $mq_size_key) {
  @each $scale_shorthand,
    $scale_shorthand_value in $scale_shorthands
  {
    @include css_dimension_property_builder(
      $scale_prop,
      $scale_shorthand,
      map-get($scale_shorthands, $scale_shorthand),
      $mq_size_key
    );
  }
}

// loop on dimensions
@mixin play_dimensions_loop($scale_prop, $mq_size_key) {
  // loop on dimensions
  @each $scale_css_value in $scale_css_values {
    @include css_dimension_property_builder(
      $scale_prop,
      $scale_css_value,
      $scale_css_value,
      $mq_size_key
    );
  }
}

// loop on defined dimensions
@mixin play_defined_dimensions_loop($scale_prop, $mq_size_key) {
  // loop on defined dimensions
  @each $scale_defined_size in $scale_defined_sizes {
    @include css_dimension_property_builder(
      $scale_prop,
      $scale_defined_size,
      $scale_defined_size + em,
      $mq_size_key
    );
  }
}

// loop on ratio dimensions
@mixin play_ratio_dimensions_loop($scale_prop, $mq_size_key) {
  // loop on ratio dimensions
  @each $dimensions_grid_ratio in $scale_grid_ratios {
    @for $z_value from 1 through $dimensions_grid_ratio {
      @include css_dimension_property_builder(
        $scale_prop,
        $z_value + "-" + $dimensions_grid_ratio,
        (($z_value / $dimensions_grid_ratio) * 100) + \%,
        $mq_size_key
      );
    }
  }
}

$mq_size_key: null;
@each $scale_prop, $scale_prop_short in $scale_props {
  // loop on shorthands
  @include play_shorthand_loop($scale_prop, null);
  // loop on responsive shorthands
  @each $mq_size_key, $mq_size_value in $MEDIA_QUERY_SIZES {
    @include css_dimension_property_responsive_builder(
      $mq_size_key,
      $mq_size_value,
      $scale_prop
    ) {
      @include play_shorthand_loop($scale_prop, $mq_size_key);
    }
  }

  // loop on dimensions
  @include play_dimensions_loop($scale_prop, null);
  // loop on responsive dimensions
  @each $mq_size_key, $mq_size_value in $MEDIA_QUERY_SIZES {
    @include css_dimension_property_responsive_builder(
      $mq_size_key,
      $mq_size_value,
      $scale_prop
    ) {
      @include play_dimensions_loop($scale_prop, $mq_size_key);
    }
  }

  // loop on defined dimensions
  @include play_defined_dimensions_loop($scale_prop, null);
  // loop on responsive defined dimensions
  @each $mq_size_key, $mq_size_value in $MEDIA_QUERY_SIZES {
    @include css_dimension_property_responsive_builder(
      $mq_size_key,
      $mq_size_value,
      $scale_prop
    ) {
      @include play_defined_dimensions_loop($scale_prop, $mq_size_key);
    }
  }

  // loop on ratio dimensions
  @include play_ratio_dimensions_loop($scale_prop, null);
  // loop on responsive ratio dimensions
  @each $mq_size_key, $mq_size_value in $MEDIA_QUERY_SIZES {
    @include css_dimension_property_responsive_builder(
      $mq_size_key,
      $mq_size_value,
      $scale_prop
    ) {
      @include play_ratio_dimensions_loop($scale_prop, $mq_size_key);
    }
  }
}
